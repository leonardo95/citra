Historico de emails

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
03/10/2015
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Hello,

I am sending you this email because we would like to know, since you are one of the main contribuitors to the citra github project, which software processes were used in the development of said project.

Thank you for your time,
Luís Duarte.

------------------------------------------------------------------------------------------------------------------------------------------------------------------

Hey,
 
What do you mean with "software processes"?
 
--yuriks

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

Hello,

By software processes I mean the structed set of activities required to develop the software system. For example, the waterfall model states that a phase has to be complete before moving onto the next project phase it results in an inflexible partitioning of the projects distinct stages.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Citra is developed organically, there's no formal methodology used. We require all changes to come through as Pull Requests that are reviewed by maintainers (and possibly go through several address-review cycles) before merging, but that's it.
 
--yuriks

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Hello,

One last question, do all contribuitors tend to work in the same part of the project simultaneously or do they work in separated parts that result in a final product?

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

The project can reasonably be divided in several "modules", and while many people work on most parts of the code at some point or another, we usually communicate to avoid making large changes in the same pats of the code at the same time, in order to avoid merge conflicts later.
 
--yuriks

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Thank you for your time.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

No problem
 
--yuriks

--------------------------------------------------------------------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------------------------------------------------------------------
05/10/2015
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Hello Mr. Schlesner,

I have another question, how do the contributors know if a module is done? What kind of tests do you run to fully evaluate a module that you think is functional/well coded? And finally, what are the main priorities right now?

Thank you again for your time,
Luís Duarte

--------------------------------------------------------------------------------------------------------------------------------------------------------------------


There's no real measure of "done", Citra is in constant evolution. When implementing a feature, usually hwtests (small standalone program demoing some hardware or OS feature) are ran and should have matching output on the console and emulator. For software features developed with heavy code RE aid I usually skip tests and just assume my implementation is correct since I used an authoritative reference.
 
Main project priorities right now (even though development is a bit slow) is improving speed and compatbility. There's no roadmap, but steps to achieve these include a smarter hardware rendering implementation that avoids synchronizing the GPU with the CPU frequently, a JIT recompiler for the ARM core and implementation of missing GPU and OS features.
 
--yuriks

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Again, thank you for your time.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------